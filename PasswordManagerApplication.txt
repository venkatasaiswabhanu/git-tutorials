#Password Manager Application

class MainPwdManager():

    old_pwds = ["Cisco123@","Switching","Team of 6"]   # a list that holds all of the user's past passwords

    def get_pwd(self):
        return self.old_pwds[0]

    def is_correct(self, pwd): # receives a string and returns a boolean True or False
        return self.get_pwd() == pwd # depending on whether the string is equal to the current password or not

class PwdManager(MainPwdManager): # used to sets the user's password

    def set_pwd(self, new_pwd):

        if self.get_level(new_pwd) > self.get_level() and len(new_pwd) >= 6:
            self.old_pwds.append(new_pwd)
            print("Password changed Successfully.")
        else:
            print("Password cannot be changed.")

    def get_level(self, pwd = None): # returns the security level of the current password.
        if pwd == None:
            pwd = self.get_pwd()
        if pwd.isalpha() or pwd.isnumeric():
            level = 0
        elif pwd.isalnum():
            level = 1
        else:
            level = 2
        return level
Pwd= MainPwdManager()
new_pass = input("Enter new Password: ")
print(f"Comparing current password with new password: {Pwd.is_correct(new_pass)}")
manage= PwdManager()
manage.set_pwd(new_pass)
print(f"Security Level of Password: {manage.get_level()}")
